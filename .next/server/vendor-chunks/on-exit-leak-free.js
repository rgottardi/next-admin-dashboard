"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/on-exit-leak-free";
exports.ids = ["vendor-chunks/on-exit-leak-free"];
exports.modules = {

/***/ "(ssr)/./node_modules/on-exit-leak-free/index.js":
/*!*************************************************!*\
  !*** ./node_modules/on-exit-leak-free/index.js ***!
  \*************************************************/
/***/ ((module) => {

eval("\nconst refs = {\n    exit: [],\n    beforeExit: []\n};\nconst functions = {\n    exit: onExit,\n    beforeExit: onBeforeExit\n};\nlet registry;\nfunction ensureRegistry() {\n    if (registry === undefined) {\n        registry = new FinalizationRegistry(clear);\n    }\n}\nfunction install(event) {\n    if (refs[event].length > 0) {\n        return;\n    }\n    process.on(event, functions[event]);\n}\nfunction uninstall(event) {\n    if (refs[event].length > 0) {\n        return;\n    }\n    process.removeListener(event, functions[event]);\n    if (refs.exit.length === 0 && refs.beforeExit.length === 0) {\n        registry = undefined;\n    }\n}\nfunction onExit() {\n    callRefs(\"exit\");\n}\nfunction onBeforeExit() {\n    callRefs(\"beforeExit\");\n}\nfunction callRefs(event) {\n    for (const ref of refs[event]){\n        const obj = ref.deref();\n        const fn = ref.fn;\n        // This should always happen, however GC is\n        // undeterministic so it might not happen.\n        /* istanbul ignore else */ if (obj !== undefined) {\n            fn(obj, event);\n        }\n    }\n    refs[event] = [];\n}\nfunction clear(ref) {\n    for (const event of [\n        \"exit\",\n        \"beforeExit\"\n    ]){\n        const index = refs[event].indexOf(ref);\n        refs[event].splice(index, index + 1);\n        uninstall(event);\n    }\n}\nfunction _register(event, obj, fn) {\n    if (obj === undefined) {\n        throw new Error(\"the object can't be undefined\");\n    }\n    install(event);\n    const ref = new WeakRef(obj);\n    ref.fn = fn;\n    ensureRegistry();\n    registry.register(obj, ref);\n    refs[event].push(ref);\n}\nfunction register(obj, fn) {\n    _register(\"exit\", obj, fn);\n}\nfunction registerBeforeExit(obj, fn) {\n    _register(\"beforeExit\", obj, fn);\n}\nfunction unregister(obj) {\n    if (registry === undefined) {\n        return;\n    }\n    registry.unregister(obj);\n    for (const event of [\n        \"exit\",\n        \"beforeExit\"\n    ]){\n        refs[event] = refs[event].filter((ref)=>{\n            const _obj = ref.deref();\n            return _obj && _obj !== obj;\n        });\n        uninstall(event);\n    }\n}\nmodule.exports = {\n    register,\n    registerBeforeExit,\n    unregister\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvb24tZXhpdC1sZWFrLWZyZWUvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxNQUFNQSxPQUFPO0lBQ1hDLE1BQU0sRUFBRTtJQUNSQyxZQUFZLEVBQUU7QUFDaEI7QUFDQSxNQUFNQyxZQUFZO0lBQ2hCRixNQUFNRztJQUNORixZQUFZRztBQUNkO0FBRUEsSUFBSUM7QUFFSixTQUFTQztJQUNQLElBQUlELGFBQWFFLFdBQVc7UUFDMUJGLFdBQVcsSUFBSUcscUJBQXFCQztJQUN0QztBQUNGO0FBRUEsU0FBU0MsUUFBU0MsS0FBSztJQUNyQixJQUFJWixJQUFJLENBQUNZLE1BQU0sQ0FBQ0MsTUFBTSxHQUFHLEdBQUc7UUFDMUI7SUFDRjtJQUVBQyxRQUFRQyxFQUFFLENBQUNILE9BQU9ULFNBQVMsQ0FBQ1MsTUFBTTtBQUNwQztBQUVBLFNBQVNJLFVBQVdKLEtBQUs7SUFDdkIsSUFBSVosSUFBSSxDQUFDWSxNQUFNLENBQUNDLE1BQU0sR0FBRyxHQUFHO1FBQzFCO0lBQ0Y7SUFDQUMsUUFBUUcsY0FBYyxDQUFDTCxPQUFPVCxTQUFTLENBQUNTLE1BQU07SUFDOUMsSUFBSVosS0FBS0MsSUFBSSxDQUFDWSxNQUFNLEtBQUssS0FBS2IsS0FBS0UsVUFBVSxDQUFDVyxNQUFNLEtBQUssR0FBRztRQUMxRFAsV0FBV0U7SUFDYjtBQUNGO0FBRUEsU0FBU0o7SUFDUGMsU0FBUztBQUNYO0FBRUEsU0FBU2I7SUFDUGEsU0FBUztBQUNYO0FBRUEsU0FBU0EsU0FBVU4sS0FBSztJQUN0QixLQUFLLE1BQU1PLE9BQU9uQixJQUFJLENBQUNZLE1BQU0sQ0FBRTtRQUM3QixNQUFNUSxNQUFNRCxJQUFJRSxLQUFLO1FBQ3JCLE1BQU1DLEtBQUtILElBQUlHLEVBQUU7UUFFakIsMkNBQTJDO1FBQzNDLDBDQUEwQztRQUMxQyx3QkFBd0IsR0FDeEIsSUFBSUYsUUFBUVosV0FBVztZQUNyQmMsR0FBR0YsS0FBS1I7UUFDVjtJQUNGO0lBQ0FaLElBQUksQ0FBQ1ksTUFBTSxHQUFHLEVBQUU7QUFDbEI7QUFFQSxTQUFTRixNQUFPUyxHQUFHO0lBQ2pCLEtBQUssTUFBTVAsU0FBUztRQUFDO1FBQVE7S0FBYSxDQUFFO1FBQzFDLE1BQU1XLFFBQVF2QixJQUFJLENBQUNZLE1BQU0sQ0FBQ1ksT0FBTyxDQUFDTDtRQUNsQ25CLElBQUksQ0FBQ1ksTUFBTSxDQUFDYSxNQUFNLENBQUNGLE9BQU9BLFFBQVE7UUFDbENQLFVBQVVKO0lBQ1o7QUFDRjtBQUVBLFNBQVNjLFVBQVdkLEtBQUssRUFBRVEsR0FBRyxFQUFFRSxFQUFFO0lBQ2hDLElBQUlGLFFBQVFaLFdBQVc7UUFDckIsTUFBTSxJQUFJbUIsTUFBTTtJQUNsQjtJQUNBaEIsUUFBUUM7SUFDUixNQUFNTyxNQUFNLElBQUlTLFFBQVFSO0lBQ3hCRCxJQUFJRyxFQUFFLEdBQUdBO0lBRVRmO0lBQ0FELFNBQVN1QixRQUFRLENBQUNULEtBQUtEO0lBQ3ZCbkIsSUFBSSxDQUFDWSxNQUFNLENBQUNrQixJQUFJLENBQUNYO0FBQ25CO0FBRUEsU0FBU1UsU0FBVVQsR0FBRyxFQUFFRSxFQUFFO0lBQ3hCSSxVQUFVLFFBQVFOLEtBQUtFO0FBQ3pCO0FBRUEsU0FBU1MsbUJBQW9CWCxHQUFHLEVBQUVFLEVBQUU7SUFDbENJLFVBQVUsY0FBY04sS0FBS0U7QUFDL0I7QUFFQSxTQUFTVSxXQUFZWixHQUFHO0lBQ3RCLElBQUlkLGFBQWFFLFdBQVc7UUFDMUI7SUFDRjtJQUNBRixTQUFTMEIsVUFBVSxDQUFDWjtJQUNwQixLQUFLLE1BQU1SLFNBQVM7UUFBQztRQUFRO0tBQWEsQ0FBRTtRQUMxQ1osSUFBSSxDQUFDWSxNQUFNLEdBQUdaLElBQUksQ0FBQ1ksTUFBTSxDQUFDcUIsTUFBTSxDQUFDLENBQUNkO1lBQ2hDLE1BQU1lLE9BQU9mLElBQUlFLEtBQUs7WUFDdEIsT0FBT2EsUUFBUUEsU0FBU2Q7UUFDMUI7UUFDQUosVUFBVUo7SUFDWjtBQUNGO0FBRUF1QixPQUFPQyxPQUFPLEdBQUc7SUFDZlA7SUFDQUU7SUFDQUM7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtYWRtaW4tZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL29uLWV4aXQtbGVhay1mcmVlL2luZGV4LmpzPzM5ODMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbmNvbnN0IHJlZnMgPSB7XG4gIGV4aXQ6IFtdLFxuICBiZWZvcmVFeGl0OiBbXVxufVxuY29uc3QgZnVuY3Rpb25zID0ge1xuICBleGl0OiBvbkV4aXQsXG4gIGJlZm9yZUV4aXQ6IG9uQmVmb3JlRXhpdFxufVxuXG5sZXQgcmVnaXN0cnlcblxuZnVuY3Rpb24gZW5zdXJlUmVnaXN0cnkgKCkge1xuICBpZiAocmVnaXN0cnkgPT09IHVuZGVmaW5lZCkge1xuICAgIHJlZ2lzdHJ5ID0gbmV3IEZpbmFsaXphdGlvblJlZ2lzdHJ5KGNsZWFyKVxuICB9XG59XG5cbmZ1bmN0aW9uIGluc3RhbGwgKGV2ZW50KSB7XG4gIGlmIChyZWZzW2V2ZW50XS5sZW5ndGggPiAwKSB7XG4gICAgcmV0dXJuXG4gIH1cblxuICBwcm9jZXNzLm9uKGV2ZW50LCBmdW5jdGlvbnNbZXZlbnRdKVxufVxuXG5mdW5jdGlvbiB1bmluc3RhbGwgKGV2ZW50KSB7XG4gIGlmIChyZWZzW2V2ZW50XS5sZW5ndGggPiAwKSB7XG4gICAgcmV0dXJuXG4gIH1cbiAgcHJvY2Vzcy5yZW1vdmVMaXN0ZW5lcihldmVudCwgZnVuY3Rpb25zW2V2ZW50XSlcbiAgaWYgKHJlZnMuZXhpdC5sZW5ndGggPT09IDAgJiYgcmVmcy5iZWZvcmVFeGl0Lmxlbmd0aCA9PT0gMCkge1xuICAgIHJlZ2lzdHJ5ID0gdW5kZWZpbmVkXG4gIH1cbn1cblxuZnVuY3Rpb24gb25FeGl0ICgpIHtcbiAgY2FsbFJlZnMoJ2V4aXQnKVxufVxuXG5mdW5jdGlvbiBvbkJlZm9yZUV4aXQgKCkge1xuICBjYWxsUmVmcygnYmVmb3JlRXhpdCcpXG59XG5cbmZ1bmN0aW9uIGNhbGxSZWZzIChldmVudCkge1xuICBmb3IgKGNvbnN0IHJlZiBvZiByZWZzW2V2ZW50XSkge1xuICAgIGNvbnN0IG9iaiA9IHJlZi5kZXJlZigpXG4gICAgY29uc3QgZm4gPSByZWYuZm5cblxuICAgIC8vIFRoaXMgc2hvdWxkIGFsd2F5cyBoYXBwZW4sIGhvd2V2ZXIgR0MgaXNcbiAgICAvLyB1bmRldGVybWluaXN0aWMgc28gaXQgbWlnaHQgbm90IGhhcHBlbi5cbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICAgIGlmIChvYmogIT09IHVuZGVmaW5lZCkge1xuICAgICAgZm4ob2JqLCBldmVudClcbiAgICB9XG4gIH1cbiAgcmVmc1tldmVudF0gPSBbXVxufVxuXG5mdW5jdGlvbiBjbGVhciAocmVmKSB7XG4gIGZvciAoY29uc3QgZXZlbnQgb2YgWydleGl0JywgJ2JlZm9yZUV4aXQnXSkge1xuICAgIGNvbnN0IGluZGV4ID0gcmVmc1tldmVudF0uaW5kZXhPZihyZWYpXG4gICAgcmVmc1tldmVudF0uc3BsaWNlKGluZGV4LCBpbmRleCArIDEpXG4gICAgdW5pbnN0YWxsKGV2ZW50KVxuICB9XG59XG5cbmZ1bmN0aW9uIF9yZWdpc3RlciAoZXZlbnQsIG9iaiwgZm4pIHtcbiAgaWYgKG9iaiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCd0aGUgb2JqZWN0IGNhblxcJ3QgYmUgdW5kZWZpbmVkJylcbiAgfVxuICBpbnN0YWxsKGV2ZW50KVxuICBjb25zdCByZWYgPSBuZXcgV2Vha1JlZihvYmopXG4gIHJlZi5mbiA9IGZuXG5cbiAgZW5zdXJlUmVnaXN0cnkoKVxuICByZWdpc3RyeS5yZWdpc3RlcihvYmosIHJlZilcbiAgcmVmc1tldmVudF0ucHVzaChyZWYpXG59XG5cbmZ1bmN0aW9uIHJlZ2lzdGVyIChvYmosIGZuKSB7XG4gIF9yZWdpc3RlcignZXhpdCcsIG9iaiwgZm4pXG59XG5cbmZ1bmN0aW9uIHJlZ2lzdGVyQmVmb3JlRXhpdCAob2JqLCBmbikge1xuICBfcmVnaXN0ZXIoJ2JlZm9yZUV4aXQnLCBvYmosIGZuKVxufVxuXG5mdW5jdGlvbiB1bnJlZ2lzdGVyIChvYmopIHtcbiAgaWYgKHJlZ2lzdHJ5ID09PSB1bmRlZmluZWQpIHtcbiAgICByZXR1cm5cbiAgfVxuICByZWdpc3RyeS51bnJlZ2lzdGVyKG9iailcbiAgZm9yIChjb25zdCBldmVudCBvZiBbJ2V4aXQnLCAnYmVmb3JlRXhpdCddKSB7XG4gICAgcmVmc1tldmVudF0gPSByZWZzW2V2ZW50XS5maWx0ZXIoKHJlZikgPT4ge1xuICAgICAgY29uc3QgX29iaiA9IHJlZi5kZXJlZigpXG4gICAgICByZXR1cm4gX29iaiAmJiBfb2JqICE9PSBvYmpcbiAgICB9KVxuICAgIHVuaW5zdGFsbChldmVudClcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgcmVnaXN0ZXIsXG4gIHJlZ2lzdGVyQmVmb3JlRXhpdCxcbiAgdW5yZWdpc3RlclxufVxuIl0sIm5hbWVzIjpbInJlZnMiLCJleGl0IiwiYmVmb3JlRXhpdCIsImZ1bmN0aW9ucyIsIm9uRXhpdCIsIm9uQmVmb3JlRXhpdCIsInJlZ2lzdHJ5IiwiZW5zdXJlUmVnaXN0cnkiLCJ1bmRlZmluZWQiLCJGaW5hbGl6YXRpb25SZWdpc3RyeSIsImNsZWFyIiwiaW5zdGFsbCIsImV2ZW50IiwibGVuZ3RoIiwicHJvY2VzcyIsIm9uIiwidW5pbnN0YWxsIiwicmVtb3ZlTGlzdGVuZXIiLCJjYWxsUmVmcyIsInJlZiIsIm9iaiIsImRlcmVmIiwiZm4iLCJpbmRleCIsImluZGV4T2YiLCJzcGxpY2UiLCJfcmVnaXN0ZXIiLCJFcnJvciIsIldlYWtSZWYiLCJyZWdpc3RlciIsInB1c2giLCJyZWdpc3RlckJlZm9yZUV4aXQiLCJ1bnJlZ2lzdGVyIiwiZmlsdGVyIiwiX29iaiIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/on-exit-leak-free/index.js\n");

/***/ })

};
;